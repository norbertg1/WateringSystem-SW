#usage: source path/database_initialization_commands
CREATE DATABASE watering_server;
USE watering_server;
CREATE TABLE IF NOT EXISTS `users` (
  `USER_ID` int(11) NOT NULL AUTO_INCREMENT,
  `USER_NAME` varchar(15) NOT NULL,
  `USER_EMAIL` varchar(40) NOT NULL,
  `USER_PASSWORD` varchar(255) NOT NULL,
  `JOINING_DATE` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`USER_ID`)
) ENGINE=MyISAM DEFAULT CHARSET=latin1 AUTO_INCREMENT=1 ;

CREATE TABLE devices (
	USER_NAME					varchar(127),	#Felhasználónév szintén szabadon választható
	DEVICE_NAME					varchar(127),	#Ezt a felhasználó szabadon választhatja
	DEVICE_ID					varchar(127),	#Ezt amikor a hardver AP üzemmódban van, akkor lehet kiolvasni belőle. Csak olyan hardver engedélyezett ami szerepel ebben a táblában
	LAST_ON_TIME				datetime,		#Az utolsó öntözés időpontja
	ON_COMMAND					bool,			#Ha 1 elindul az öntözés
	REPEAT_RATE					int,			#Az öntözés ismétlődése órákban. A 0 azt jelenti, hogy ki van kapcsolva a funkcio
	IRRIGATION_TIME				time,			#Az öntözés időpontja
	IRRIGATION_LENGHT			int,			#ilyen hosszan tartson az öntözés	
	MOISTURE_PERCENT			int,			#Az öntözés elindítása a talajnedvesség függvényében. A 0 azt jelenti hogy ki van kapcsolva a funkció.
	IRRIGATION_ON_TEMPERATURE	bool,			#A napi speciálisan kiszámított hőmréséklettől függően öntöz
    TEMPERATURE_POINTS	        int,            #ebben tárolom
    AREA                        int,            #Az öntözendő terület nagysága m2-ben	
    DELAY_TIME					int,			#Ennyi másodperces időközönként ébredjen fel ellenőrizni, hogy kell-e még locsolni, ha az be van kapcsolva
	SLEEP_TIME					int,			#Ennyi másodperces időközönként ébredjen fel ellenőrizni, hogy kell-e locsolni
	REMOTE_UPDATE				int,			#Ha 0 ====> normális működés ha 1 ====> az eszköz IP címén bejön a web update interfész
    LATID                       float,          #helyadat	
    LONGIT                      float,          #helyadat
    DAILY_MAX                   float,          #openweathermap-ból lekérdezett érték
    USER_EMAIL					varchar(127)	#Ez alapján lesznek azonosítva az egyes felhasználók
);

/*A repeat rate megengedett értéke a 24 többszöröse (tehát 1 nap). 
**Ha negatív értékeke vesz fel az azt jelenti hogy az öntözés véletlenszerűen
**eltolódhat 24 órával. Tehát -24 ===> 24-48h/öntözés, -48===> 48-72h/öntözés, stb...*/

CREATE TABLE data (
	DEVICE_ID			varchar(127),
    DEVICE_NAME         varchar(127),
	LAST_LOGIN			datetime,
	TEMPERATURE			float,
	HUMIDITY			smallint,
	MOISTURE			smallint,
	PRESSURE			float,
    WATER_VOLUME        float,
	WATER_VELOCITY      float,
    MM                  int,      
    VOLTAGE				float,
    ON_OFF_STATE		bool,
	TEMPERATURE_POINTS	int,
	RSSI				int,
	AWAKE_TIME			float,
    VERSION             varchar(10),
    RST_REASON          varchar(25)
);

insert into users values('anna','valaki@valaki.com','titok');
insert into devices values('anna','locsolo1','2017-08-31 15:16:55',0,0,0,'7:00:00',0,0,900,60,0);

CREATE TABLE scheduled_irrigation (
	DEVICE_ID			varchar(20),
	ON_TIME				time,	
	ON_TIME_LENGHT		int,
	DONE_FOR_TODAY		bool,
);

CREATE TABLE scheduled_irrigation_one_time (
	DEVICE_ID			varchar(20),
	ON_TIME				time,	
	ON_TIME_LENGHT		int,
	DONE_FOR_TODAY		bool,
);

CREATE VIEW data_last_week AS SELECT * from data WHERE LAST_LOGIN >= DATE_ADD(CURDATE(),INTERVAL -7 DAY);
CREATE VIEW last_week as SELECT data.DEVICE_ID, devices.DEVICE_NAME, data.LAST_LOGIN, data.TEMPERATURE, data.HUMIDITY, data.MOISTURE, data.PRESSURE, data.WATER_VOLUME, data.WATER_VELOCITY, data.VOLTAGE, data.ON_OFF_STATE, data.TEMPERATURE_POINTS, data.RSSI, data.AWAKE_TIME, data.VERSION, data.RST_REASON from data  JOIN devices ON data.DEVICE_ID = devices.DEVICE_ID WHERE LAST_LOGIN >= DATE_ADD(CURDATE(),INTERVAL -7 DAY);
CREATE VIEW last_week_desc as SELECT data.DEVICE_ID, devices.DEVICE_NAME, data.LAST_LOGIN, data.TEMPERATURE, data.HUMIDITY, data.MOISTURE, data.PRESSURE, data.WATER_VOLUME, data.WATER_VELOCITY, data.VOLTAGE, data.ON_OFF_STATE, data.TEMPERATURE_POINTS, data.RSSI, data.AWAKE_TIME, data.VERSION, data.RST_REASON from data  JOIN devices ON data.DEVICE_ID = devices.DEVICE_ID WHERE LAST_LOGIN >= DATE_ADD(CURDATE(),INTERVAL -7 DAY) ORDER BY LAST_LOGIN desc;
